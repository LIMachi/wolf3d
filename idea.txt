flat hash map

table -> n * group_hash

hash {
	57-bits position (H1) (64 peta) (in the groups and slots)
	7-bits metadata  (H2) (in the control bytes)
}

size_t H1 -> hash >> 7
ctrl_t H2 -> hash & 0x7F

enum ctrl:
	empty =    0b10000000
	deleted =  0b11111110
	sentinel = 0b11111111
	full =     0b0xxxxxxx (x == meta data H2)

group {
	16 meta data bytes (ctrl or H2)
	16 any size blocks ('slots' containing keys and values) (usually char *, void *)
}

find 1: key hash
	pos = H1(hash) % size
	h2 = H2(hash)
	while 1
		if h2 == ctrl[pos] && key == slots[pos]
			return pos
		if ctrl[pos] == empty
			return -1
		pos = (pos + 1) % size



match hash h2 (sse)
	_mm_movemask_epi8(_mmcmpeq_epi8(_mm_set1_epi8(h2), ctrl))

find 2: key, hash
	igroup = H1(hash) % ngroup
	while 1
		group = ctrl + igroup * 16
		for i in group.match H2 hash
			if key == slots[igroup * 16 + i]
				return it(igroup * 16 + i)
		if group.empty
			return -1
		group = (group + 1) % ngroup

delete: it


le loup en slip t2 - +
